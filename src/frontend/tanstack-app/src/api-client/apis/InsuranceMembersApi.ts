/* tslint:disable */
/* eslint-disable */
/**
 * TestApp API
 * A sample API to demonstrate OpenAPI integration
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  InsuranceMember,
} from '../models/index';
import {
    InsuranceMemberFromJSON,
    InsuranceMemberToJSON,
} from '../models/index';

export interface ApiInsuranceMembersIdDeleteRequest {
    id: number;
}

export interface ApiInsuranceMembersIdGetRequest {
    id: number;
}

export interface ApiInsuranceMembersIdPutRequest {
    id: number;
    insuranceMember?: InsuranceMember;
}

export interface ApiInsuranceMembersPostRequest {
    insuranceMember?: InsuranceMember;
}

/**
 * 
 */
export class InsuranceMembersApi extends runtime.BaseAPI {

    /**
     */
    async apiInsuranceMembersGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<InsuranceMember>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/InsuranceMembers`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(InsuranceMemberFromJSON));
    }

    /**
     */
    async apiInsuranceMembersGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<InsuranceMember>> {
        const response = await this.apiInsuranceMembersGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiInsuranceMembersIdDeleteRaw(requestParameters: ApiInsuranceMembersIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiInsuranceMembersIdDelete().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/InsuranceMembers/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiInsuranceMembersIdDelete(requestParameters: ApiInsuranceMembersIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiInsuranceMembersIdDeleteRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiInsuranceMembersIdGetRaw(requestParameters: ApiInsuranceMembersIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InsuranceMember>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiInsuranceMembersIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/InsuranceMembers/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InsuranceMemberFromJSON(jsonValue));
    }

    /**
     */
    async apiInsuranceMembersIdGet(requestParameters: ApiInsuranceMembersIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InsuranceMember> {
        const response = await this.apiInsuranceMembersIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiInsuranceMembersIdPutRaw(requestParameters: ApiInsuranceMembersIdPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiInsuranceMembersIdPut().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/InsuranceMembers/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: InsuranceMemberToJSON(requestParameters['insuranceMember']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiInsuranceMembersIdPut(requestParameters: ApiInsuranceMembersIdPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiInsuranceMembersIdPutRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiInsuranceMembersPostRaw(requestParameters: ApiInsuranceMembersPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InsuranceMember>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/InsuranceMembers`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: InsuranceMemberToJSON(requestParameters['insuranceMember']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InsuranceMemberFromJSON(jsonValue));
    }

    /**
     */
    async apiInsuranceMembersPost(requestParameters: ApiInsuranceMembersPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InsuranceMember> {
        const response = await this.apiInsuranceMembersPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
