/* tslint:disable */
/* eslint-disable */
/**
 * TestApp API
 * A sample API to demonstrate OpenAPI integration
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InsuranceMember
 */
export interface InsuranceMember {
    /**
     * 
     * @type {number}
     * @memberof InsuranceMember
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof InsuranceMember
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof InsuranceMember
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof InsuranceMember
     */
    address1: string;
    /**
     * 
     * @type {string}
     * @memberof InsuranceMember
     */
    address2?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InsuranceMember
     */
    city: string;
    /**
     * 
     * @type {string}
     * @memberof InsuranceMember
     */
    state: string;
    /**
     * 
     * @type {string}
     * @memberof InsuranceMember
     */
    zip: string;
    /**
     * 
     * @type {string}
     * @memberof InsuranceMember
     */
    phoneNumber: string;
    /**
     * 
     * @type {string}
     * @memberof InsuranceMember
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof InsuranceMember
     */
    memberPlan: string;
    /**
     * 
     * @type {Date}
     * @memberof InsuranceMember
     */
    dateOfBirth: Date;
    /**
     * 
     * @type {Date}
     * @memberof InsuranceMember
     */
    policyStartDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof InsuranceMember
     */
    policyEndDate: Date;
}

/**
 * Check if a given object implements the InsuranceMember interface.
 */
export function instanceOfInsuranceMember(value: object): value is InsuranceMember {
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('address1' in value) || value['address1'] === undefined) return false;
    if (!('city' in value) || value['city'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('zip' in value) || value['zip'] === undefined) return false;
    if (!('phoneNumber' in value) || value['phoneNumber'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('memberPlan' in value) || value['memberPlan'] === undefined) return false;
    if (!('dateOfBirth' in value) || value['dateOfBirth'] === undefined) return false;
    if (!('policyStartDate' in value) || value['policyStartDate'] === undefined) return false;
    if (!('policyEndDate' in value) || value['policyEndDate'] === undefined) return false;
    return true;
}

export function InsuranceMemberFromJSON(json: any): InsuranceMember {
    return InsuranceMemberFromJSONTyped(json, false);
}

export function InsuranceMemberFromJSONTyped(json: any, ignoreDiscriminator: boolean): InsuranceMember {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'address1': json['address1'],
        'address2': json['address2'] == null ? undefined : json['address2'],
        'city': json['city'],
        'state': json['state'],
        'zip': json['zip'],
        'phoneNumber': json['phoneNumber'],
        'email': json['email'],
        'memberPlan': json['memberPlan'],
        'dateOfBirth': (new Date(json['dateOfBirth'])),
        'policyStartDate': (new Date(json['policyStartDate'])),
        'policyEndDate': (new Date(json['policyEndDate'])),
    };
}

export function InsuranceMemberToJSON(json: any): InsuranceMember {
    return InsuranceMemberToJSONTyped(json, false);
}

export function InsuranceMemberToJSONTyped(value?: InsuranceMember | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'address1': value['address1'],
        'address2': value['address2'],
        'city': value['city'],
        'state': value['state'],
        'zip': value['zip'],
        'phoneNumber': value['phoneNumber'],
        'email': value['email'],
        'memberPlan': value['memberPlan'],
        'dateOfBirth': ((value['dateOfBirth']).toISOString()),
        'policyStartDate': ((value['policyStartDate']).toISOString()),
        'policyEndDate': ((value['policyEndDate']).toISOString()),
    };
}

